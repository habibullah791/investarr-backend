# Generated by Django 5.0.6 on 2024-07-08 17:11

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="CustomUser",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "user_type",
                    models.CharField(
                        blank=True,
                        choices=[("Investor", "Investor"), ("Investee", "Investee")],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("profile_pic_url", models.TextField(blank=True, null=True)),
                ("gallery_images", models.JSONField(default=list)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("address", models.CharField(blank=True, max_length=255, null=True)),
                ("area_of_interest", models.TextField(blank=True, null=True)),
                ("bio", models.TextField(blank=True, null=True)),
                (
                    "membership_tier",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Free", "Free"),
                            ("Basic", "Basic"),
                            ("Standard", "Standard"),
                            ("Premium", "Premium"),
                            ("Premium Plus", "Premium Plus"),
                        ],
                        default="Free",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "verification_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Basic", "Basic"),
                            ("Level 1", "Level 1"),
                            ("Level 2", "Level 2"),
                        ],
                        default="Basic",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "verification_badge",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Basic", "Basic"),
                            ("Level 1", "Level 1"),
                            ("Level 2", "Level 2"),
                        ],
                        default="Basic",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("startup_idea", models.TextField(blank=True, null=True)),
                (
                    "startup_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("startup_description", models.TextField(blank=True, null=True)),
                ("is_email_verified", models.BooleanField(default=False)),
                ("is_phone_verified", models.BooleanField(default=False)),
                (
                    "order_tracking_id",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "merchant_reference",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "payment_status",
                    models.CharField(
                        blank=True,
                        choices=[("Pending", "Pending"), ("Success", "Success")],
                        default="Pending",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "previewText",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("description", models.TextField()),
                ("subTopic_1", models.CharField(blank=True, max_length=255, null=True)),
                ("subTopic_2", models.CharField(blank=True, max_length=255, null=True)),
                ("subTopic_3", models.CharField(blank=True, max_length=255, null=True)),
                ("subTopic_1_description", models.TextField(blank=True, null=True)),
                ("subTopic_2_description", models.TextField(blank=True, null=True)),
                ("subTopic_3_description", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_published", models.BooleanField(default=False)),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ArticleImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(blank=True, upload_to="images/")),
                ("caption", models.CharField(blank=True, max_length=255, null=True)),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="accounts.article",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EmailReceived",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subject", models.CharField(max_length=255)),
                ("content", models.TextField()),
                ("received_at", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False)),
                ("is_deleted", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        default=None,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Video",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                ("video_url", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_published", models.BooleanField(default=False)),
                (
                    "article",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="videos",
                        to="accounts.article",
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
